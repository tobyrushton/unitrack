generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id             String         @id @default(uuid())
  email          String         @unique
  firstName      String
  lastName       String
  hashedPassword String
  sessions       Session[]
  calendarItems  CalendarItem[]
  modules        Module[]
  assessments    Assessment[]
}

model Session {
  id        String   @id @default(uuid())
  userId    String
  expiresAt DateTime
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model CalendarItem {
  id           String      @id @default(uuid())
  title        String
  start        DateTime
  end          DateTime
  description  String?
  userId       String
  moduleId     String
  assessmentId String?
  user         User        @relation(fields: [userId], references: [id], onDelete: Cascade)
  module       Module      @relation(fields: [moduleId], references: [id])
  assessment   Assessment? @relation(fields: [assessmentId], references: [id])
}

model Module {
  id            String         @id @default(uuid())
  name          String
  code          String
  credits       Int
  grade         Int?
  userId        String
  user          User           @relation(fields: [userId], references: [id], onDelete: Cascade)
  assessments   Assessment[]
  calendarItems CalendarItem[]
}

model Assessment {
  id            String         @id @default(uuid())
  name          String
  weight        Int
  moduleId      String
  userId        String
  date          DateTime
  grade         Int?
  module        Module         @relation(fields: [moduleId], references: [id], onDelete: Cascade)
  user          User           @relation(fields: [userId], references: [id], onDelete: Cascade)
  CalendarItems CalendarItem[]
}
